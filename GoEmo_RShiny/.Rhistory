runApp()
runApp()
# import libraries
library(shiny)
library(tidyverse)
# set to current directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# set to current directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# read in data
dota_comments <- read_csv("dota_comments.csv")
dota_comments %>% ggplot(
aes(
x = eval(parse(text = 'logpred')), )) +
geom_bar()
View(dota_comments)
colnames(dota_comments)
runApp()
runApp()
install.packages("scatterplot3d")
library("scatterplot3d")
scatterplot3d(dota_comments[,6:8], pch = 16, color = Logistic_Regression,
grid=TRUE, box=FALSE)
scatterplot3d(dota_comments[,6:8], pch = 16, color = dota_comments$Logistic_Regression,
grid=TRUE, box=FALSE)
scatterplot3d(dota_comments[,6:8], pch = 16, color = dota_comments$Logistic_Regression,
grid=TRUE, box=FALSE, legend = dota_comments$Logistic_Regression)
dota_comments %>% ggplot(aes(PCA1, PCA2)) + geom_point()
dota_comments %>% ggplot(aes(PCA1, PCA2, color = Logistic_Regression)) + geom_point()
dota_comments %>% ggplot(aes(PCA1, PCA2, color = as.factor(Logistic_Regression))) + geom_point()
dota_comments %>% ggplot(aes(PCA1, PCA3, color = as.factor(Logistic_Regression))) + geom_point()
dota_comments %>% ggplot(aes(PCA2, PCA3, color = as.factor(Logistic_Regression))) + geom_point()
install.packages("plotly")
install.packages("plotly")
library(plotly)
# import libraries
library(shiny)
library(tidyverse)
runApp()
plot_ly(x=dota_comments$PCA1,
y=dota_comments$PCA2,
z=dota_comments$PCA3,
type="scatter3d",
mode="markers",
color=dota_comments$Logistic_Regression)
plot_ly(x=dota_comments$PCA1,
y=dota_comments$PCA2,
z=dota_comments$PCA3,
type="scatter3d",
mode="markers",
color=as.factor(dota_comments$Logistic_Regression))
plot_ly(x=dota_comments$PCA1,
y=dota_comments$PCA2,
z=dota_comments$PCA3,
type="scatter3d",
mode="markers",
color=as.factor(dota_comments$SVM))
plot_ly(x=dota_comments$PCA1,
y=dota_comments$PCA2,
z=dota_comments$PCA3,
type="scatter3d",
color=as.factor(dota_comments$SVM))
runApp()
runApp()
runApp()
dota_comments %>% ggplot(aes(PC1, PC2, color = as.factor(Logistic_Regression))) + geom_point()
dota_comments %>% ggplot(aes(PCA1, PCA2, color = as.factor(Logistic_Regression))) +
geom_point()
runApp()
dota_comments %>%
ggplot(aes(PCA2, PCA2, color = as.factor(Logistic_Regression))) +
geom_point()
dota_comments %>%
ggplot(aes(PCA2, PCA3, color = as.factor(Logistic_Regression))) +
geom_point()
dota_comments %>%
ggplot(aes(PCA1, PCA3, color = as.factor(Logistic_Regression))) +
geom_point()
runApp()
dota_comments %>%
ggplot(aes(PCA1, PCA3, color = as.factor(Logistic_Regression), size = 2)) +
geom_point()
dota_comments %>%
ggplot(aes(PCA1, PCA3, color = as.factor(Logistic_Regression), size = 1)) +
geom_point()
dota_comments %>%
ggplot(aes(PCA1, PCA3, color = as.factor(Logistic_Regression), size = 0.5)) +
geom_point()
dota_comments %>%
ggplot(aes(PCA1, PCA3, color = as.factor(Logistic_Regression), size = 3)) +
geom_point()
dota_comments %>%
ggplot(aes(PCA1, PCA3, color = as.factor(Logistic_Regression), size = 10)) +
geom_point()
dota_comments %>%
ggplot(aes(PCA1, PCA3,
color = as.factor(Logistic_Regression),
size = 10,
alpha = 0.5)) +
geom_point()
runApp()
runApp()
runApp()
plot_ly(iris,
x = ~get(input$choice),
y = ~Sepal.Length,
type = 'scatter',
mode = 'markers')
plot_ly(dota_comments,
x = ~get(input$choice),
y = ~Sepal.Length,
type = 'scatter',
mode = 'markers')
library(plotly)
plot_ly(dota_comments,
x = ~get(input$choice),
y = ~Sepal.Length,
type = 'scatter',
mode = 'markers')
plot_ly(dota_comments,
x = PCA1,
y = PCA3,
type = 'scatter',
mode = 'markers')
plot_ly(dota_comments,
x = ~PCA1,
y = ~PCA3,
type = 'scatter',
mode = 'markers')
runApp()
runApp()
plot_ly(dota_comments,
x = ~PCA1,
y = ~PCA3,
type = 'scatter',
mode = 'markers')
runApp()
}
runApp()
runApp()
runApp()
runApp()
plot_ly(dota_comments,
x = ~PCA1,
y = ~PCA3,
type = 'scatter',
mode = 'markers',
color = Logistic_Regression)
plot_ly(dota_comments,
x = ~PCA1,
y = ~PCA3,
type = 'scatter',
mode = 'markers',
color = Logistic_Regression)
plot_ly(dota_comments,
x = ~PCA1,
y = ~PCA3,
type = 'scatter',
mode = 'markers',
color = ~Logistic_Regression)
plot_ly(dota_comments,
x = ~PCA1,
y = ~PCA3,
type = 'scatter',
mode = 'markers',
color = ~as.factor(Logistic_Regression))
runApp()
runApp()
runApp()
runApp()
dota_comments %>%
ggplot(aes(PCA1, PCA3,
color = as.factor(Logistic_Regression),
size = 10,
alpha = 0.5)) +
geom_point()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# read in data
dota_comments <- read_csv("dota_comments.csv")
dota_comments <- tibble::rowid_to_column(dota_comments, "ID")
View(dota_comments)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
dota_comments %>%
ggplot(aes(PCA1, PCA3,
color = as.factor(Logistic_Regression),
alpha = 0.5)) +
geom_point()
dota_comments %>% ggplot(
aes(x = Logistic_Regression)) +
geom_bar(aes(y= ..prop.., fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
theme(legend.position="none")+
scale_y_continuous(labels = scales::percent)
View(dota_comments)
runApp()
View(dota_comments)
dota_comments %>% ggplot(
aes(x = Logistic_Regression))
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y= ..prop.., fill = factor(..x..)), stat= "count")
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count")
dota_comments %>% ggplot(
aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
theme(legend.position="none")+
scale_y_continuous(labels = scales::percent)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5)
dota_comments %>% ggplot(aes(x = BERT)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
theme(legend.position="none")+
scale_y_continuous(labels = scales::percent)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. )) +
theme(legend.position="none") +
scale_y_continuous(labels = scales::percent)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
theme(legend.position="none") +
scale_y_continuous(labels = scales::percent)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count") +
theme(legend.position="none") +
scale_y_continuous(labels = scales::percent)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count")
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
theme(legend.position="none") +
scale_y_continuous(labels = scales::percent)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
theme(legend.position="none") +
dota_comments %>% ggplot(
aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
theme(legend.position="none")+
scale_y_continuous(labels = scales::percent)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
theme(legend.position="none")
dota_comments %>% ggplot(aes(x = BERT)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
theme(legend.position="none") +
geom_text(aes(label ))
dota_comments %>% ggplot(aes(x = BERT)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
theme(legend.position="none")
dota_comments %>% ggplot(aes(x = BERT)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
theme(legend.position="none") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
dota_comments %>% ggplot(aes(x = BERT)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
theme(legend.position="none") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
theme(legend.position="none") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5)
runApp()
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y= ..prop.., fill = factor(..x..)), stat= "count") +
theme(legend.position="none") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y= ..prop.., fill = factor(..x..)), stat= "count") +
theme(legend.position="none") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat = "count", vjust = 1.5)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y= ..prop.., fill = factor(..x..)), stat= "count") +
theme(legend.position="none") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ))
dota_comments %>% ggplot(
aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
theme(legend.position="none")+
scale_y_continuous(labels = scales::percent)
dota_comments %>% ggplot(
aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -1.5) +
theme(legend.position="none")+
scale_y_continuous(labels = scales::percent)
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y= ..prop.., fill = factor(..x..)), stat= "count") +
theme(legend.position="none") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5))
dota_comments %>% ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y= ..prop.., fill = factor(..x..)), stat= "count") +
theme(legend.position="none") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5)
dota_comments %>%
ggplot(
aes(x = eval(parse(text = Logistic_Regression)))) +
geom_bar(aes(y= ..prop.., fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ),
stat= "count", vjust = -.5) +
theme(legend.position="none") +
scale_y_continuous(labels = scales::percent) +
labs(x = 'Sentiment',
y = 'Proportion')
dota_comments %>%
ggplot(
aes(x = Logistic_Regression)) +
geom_bar(aes(y= ..prop.., fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ),
stat= "count", vjust = -.5) +
theme(legend.position="none") +
scale_y_continuous(labels = scales::percent) +
labs(x = 'Sentiment',
y = 'Proportion')
dota_comments %>%
ggplot(
aes(x = Logistic_Regression)) +
geom_bar(aes(y= ..prop.., fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. , group = 1),
stat= "count", vjust = -.5) +
theme(legend.position="none") +
scale_y_continuous(labels = scales::percent) +
labs(x = 'Sentiment',
y = 'Proportion')
dota_comments %>%
ggplot(
aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. , group = 1),
stat= "count", vjust = -.5) +
theme(legend.position="none") +
scale_y_continuous(labels = scales::percent) +
labs(x = 'Sentiment',
y = 'Proportion')
dota_comments %>%
ggplot(
aes(x = Logistic_Regression)) +
geom_bar(aes(fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. , group = 1),
stat= "count", vjust = -.5) +
theme(legend.position="none") +
labs(x = 'Sentiment',
y = 'Proportion')
dota_comments %>%
ggplot(
aes(x = Logistic_Regression)) +
geom_bar(aes(y= ..prop.., fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. , group =1),
stat= "count", vjust = -.5) +
theme(legend.position="none") +
scale_y_continuous(labels = scales::percent) +
labs(x = 'Sentiment',
y = 'Proportion')
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar()
dota_comments %>%
ggplot(aes(x = Logistic_Regression, y = ..prop..)) +
geom_bar()
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(y=..prop.., stat='count')
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y=..prop.., stat='count'))
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y=..prop..), stat='count'))
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y=..prop..), stat = 'count')
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count")
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count", group=1)
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y = (..count..)/sum(..count..)))
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = percent) +
dota_comments %>%
ggplot(
aes(x = Logistic_Regression)) +
geom_bar(aes(y= ..prop.., fill = factor(..x..)), stat= "count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. , group =1),
stat= "count", vjust = -.5) +
theme(legend.position="none") +
scale_y_continuous(labels = scales::percent) +
labs(x = 'Sentiment',
y = 'Proportion')
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = percent)
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = scales::percent)
dota_comments %>%
ggplot(aes(x = BERT)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = scales::percent)
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = scales::percent)
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
labs(x = 'Sentiment',
y = 'Proportion')
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(..x..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
labs(x = 'Sentiment',
y = 'Proportion')
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(..x..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.position="none") +
labs(x = 'Sentiment',
y = 'Proportion')
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(..x..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.position="none") +
labs(x = 'Sentiment',
y = 'Proportion',
title = 'Proportion of Sentiment')
dota_comments %>%
ggplot(aes(x = BERT)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(..x..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.position="none") +
labs(x = 'Sentiment',
y = 'Proportion',
title = 'Proportion of Sentiment')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
