bank_marketing_data %>%
select(last_contact_duration, education_category,married_or_not) %>%
group_by(education_category, married_or_not) %>%
summarize(mean_contact = mean(last_contact_duration )) %>%
ggplot(aes(x=education_category, y=mean_contact, fill = married_or_not )) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(mean_contact)),
position = position_dodge(width=0.9),
vjust=-0.25) +
labs(title = 'Last Contact Duration by Education Category and Marriage Status',
x = 'Education',
y = 'Average Contact',
fill = 'Married')
bank_marketing_data %>%
select(last_contact_duration, education_category,married_or_not) %>%
group_by(education_category, married_or_not) %>%
summarize(mean_contact = mean(last_contact_duration )) %>%
ggplot(aes(x=education_category, y=mean_contact, fill = married_or_not )) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(mean_contact)),
position = position_dodge(width=0.9),
vjust=-0.25) +
labs(title = 'Last Contact Duration by Education Category and Marriage Status',
x = 'Education',
y = 'Average Contact',
fill = 'Married') +
scale_fill_discrete(name = "Dose", labels = c("A", "B"))
scale_fill_discrete(name = "Married", labels = c("Yes", "No"))
scale_fill_discrete(name = "Married", labels = c("Yes", "No"))
bank_marketing_data %>%
select(last_contact_duration, education_category,married_or_not) %>%
group_by(education_category, married_or_not) %>%
summarize(mean_contact = mean(last_contact_duration )) %>%
ggplot(aes(x=education_category, y=mean_contact, fill = married_or_not )) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(mean_contact)),
position = position_dodge(width=0.9),
vjust=-0.25) +
labs(title = 'Last Contact Duration by Education Category and Marriage Status',
x = 'Education',
y = 'Average Contact')
bank_marketing_data %>%
select(last_contact_duration, education_category,married_or_not) %>%
group_by(education_category, married_or_not) %>%
summarize(mean_contact = mean(last_contact_duration )) %>%
ggplot(aes(x=education_category, y=mean_contact, fill = married_or_not )) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(mean_contact)),
position = position_dodge(width=0.9),
vjust=-0.25) +
labs(title = 'Last Contact Duration by Education Category and Marriage Status',
x = 'Education',
y = 'Average Contact') +
scale_fill_discrete(name = "Married?", labels = c("Yes", 'No'))
View(bank_marketing_data)
bank_marketing_data %>%
select(last_contact_duration, education_category,married_or_not) %>%
group_by(education_category, married_or_not)
bank_marketing_data %>%
select(last_contact_duration, education_category,married_or_not) %>%
group_by(education_category, married_or_not) %>%
summarize(mean_contact = mean(last_contact_duration )) #%>%
bank_marketing_data %>%
select(last_contact_duration, education_category,married_or_not) %>%
group_by(education, marital) %>%
summarize(mean_contact = mean(last_contact_duration )) %>%
ggplot(aes(x=education_category, y=mean_contact, fill = married_or_not )) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(mean_contact)),
position = position_dodge(width=0.9),
vjust=-0.25) +
labs(title = 'Last Contact Duration by Education Category and Marriage Status',
x = 'Education',
y = 'Average Contact') +
scale_fill_discrete(name = "Married?", labels = c("Yes", 'No'))
bank_marketing_data %>%
select(last_contact_duration, education_category,married_or_not) %>%
group_by(education, marital) %>%
summarize(mean_contact = mean(last_contact_duration )) %>%
ggplot(aes(x=education, y=mean_contact, fill = marital )) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(mean_contact)),
position = position_dodge(width=0.9),
vjust=-0.25) +
labs(title = 'Last Contact Duration by Education Category and Marriage Status',
x = 'Education',
y = 'Average Contact') +
scale_fill_discrete(name = "Married?", labels = c("Yes", 'No'))
bank_marketing_data %>%
ggplot(aes(x=education_category, y=mean_contact, fill = married_or_not )) +
geom_boxplot()
bank_marketing_data %>%
ggplot(aes(x=education_category, y=last_contact_duration, fill = married_or_not )) +
geom_boxplot()
library(readr)
dac_olist <- read_csv("C:/Users/trann/Downloads/BrainStation/dac_olist.csv")
View(dac_olist)
library(tidyverse)
dac_olist %>%
group_by(product_category_name_english) %>%
summarize(mean = mean(price))
dac_olist %>%
group_by(product_category_name_english) %>%
summarize(mean = mean(price)) %>%
ggplot(aes(x=product_category_name_english, y = mean)) +
geom_col()
dac_olist %>%
group_by(product_category_name_english) %>%
summarize(mean = mean(price)) %>%
ggplot(aes(x=product_category_name_english, y = mean)) +
geom_col() +
coord_flip()
tuesdata <- tidytuesdayR::tt_load('2023-01-17')
arthistory <- tuesdata$arthistory
View(tuesdata)
arthistory <- tuesdata$artist
View(arthistory)
library(dplyr)
glimpse(arthistory)
arthistory %>%
group_by(artist_gener) %>%
count()
arthistory %>%
group_by(artist_gender) %>%
count()
arthistory %>% ggplot(aes(x = year, y = ...count...)) + geom_boxplot()
library(ggplot)
library(ggplot2)
arthistory %>% ggplot(aes(x = year, y = ...count...)) + geom_boxplot()
arthistory %>%
group_by(artist_gender, year) %>%
count()
arthistory %>% ggplot(aes(x = year, y = ..count..)) + geom_boxplot()
arthistory <- arthistory %>%
mutate(decade = 10 * (year %% 10),
decade = factor(decade))
View(arthistory)
2020%%10
2020%%10
arthistory <- arthistory %>%
mutate(decade = celing(year),
decade = factor(decade))
arthistory <- arthistory %>%
mutate(decade = ceiling(year),
decade = factor(decade))
View(arthistory)
arthistory <- arthistory %>%
mutate(decade = round(year, 2),
decade = factor(decade))
View(arthistory)
?floor
trunc(1993)
trunc(1993, 2)
trunc(1993, 3)
trunc(1993, 10)
floor(1993, 3)
floor(1993)
?round_any
test <- 1993
test[1:3]
strsplit(test)
strsplit(test, '')
strsplit(test, ' ')
strsplit(as.str(test), ' ')
strsplit(as_string(test), ' ')
library(stringr)
str_split(test, ' ')
str_split(test, '')
str_split(test, '')[1]
str_split(test, '')[]
str_split(test, '')[0]
str_split(test, '')[[1]]
str_split(test, '')[[1]]
str_split(test, '')[[1]][4]
str_split(test, '')[[1]][4] = 0
library(tidyverse)
tuesdata <- tidytuesdayR::tt_load('2023-01-17')
arthistory <- tuesdata$artist
arthistory %>% ggplot(aes(x=artist_gender, y=book)) + geom_boxplot()
arthistory %>% ggplot(aes(x=artist_gender, y=count(book))) + geom_boxplot()
arthistory %>%
group_by(artist_gender) %>%
ggplot(aes(artist_gender, n())) + geom_boxplot()
arthistory %>%
group_by(artist_gender) %>%
n()
arthistory %>%
group_by(artist_gender) %>%
summarize(n())
arthistory %>%
group_by(year, artist_gender) %>%
summarize(n())
arthistory %>%
group_by(year, artist_gender) %>%
summarize(n()) %>%
ggplot(aes(year, n)) + geom_col()
arthistory %>%
group_by(year, artist_gender) %>%
summarize(n()) %>%
ggplot(aes(year, n())) + geom_col()
arthistory %>%
group_by(year, artist_gender) %>%
summarize(n())
ggplot(aes(year, n) + geom_col()
arthistory %>%
group_by(year, artist_gender) %>%
summarize(n = n()) %>%
ggplot(aes(year, n)) + geom_col()
arthistory %>%
group_by(year, artist_gender) %>%
summarize(n = n()) %>%
ggplot(aes(year, n, fill = artist_gender)) + geom_col()
arthistry %>%
count()
arthistry %>%
count(year, artist_gender)
arthistory %>%
count(year, artist_gender)
arthistory %>%
count(year, artist_gender) %>%
group_by(year) %>%
mutate(proportion = n/sum(n))
arthistory %>%
count(year, artist_gender) %>%
group_by(year) %>%
mutate(proportion = n/sum(n)) %>%
ggplot(aes(year, proportion, fill = artist_gender)) +
geom_col()
arthistory %>%
count(year, artist_gender) %>%
group_by(year) %>%
mutate(proportion = n/sum(n)) %>%
ggplot(aes(year, proportion, fill = artist_gender)) +
geom_col(alpha = 0.8)
arthistory %>%
count(year, artist_gender) %>%
group_by(year) %>%
mutate(proportion = n/sum(n)) %>%
ggplot(aes(year, proportion, fill = artist_gender)) +
geom_col(alpha = 0.8) +
scale_y_continuous(labels = scales::percent)
arthistory %>%
ggplot(aes(year, space_ratio_per_page_total, fill = artist_gender)) + geom_boxplot()
arthistory %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot()
arthistory %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot(show.legend = FALSE)
arthistory %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_gender)
arthistory %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_gender, ncols = 1)
arthistory %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(vars(artist_gender), ncols = 1)
arthistory %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(vars = artist_gender, ncols = 1)
arthistory %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(vars = artist_gender, ncol = 1)
arthistory %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_gender, ncol = 1)
1993 %/% 10
10 *1993 %/% 10
arthistory %>%
mutate(year = 10 * (year %/% 10)) %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_gender, ncol = 1)
arthistory %>%
mutate(year = 10 * (year %/% 10)) %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_gender, ncol = 1) +
scale_y_log()
arthistory %>%
mutate(year = 10 * (year %/% 10)) %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_gender, ncol = 1) +
scale_y_log10()
arthistory %>%
mutate(year = 10 * (year %/% 10)) %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_nationality)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_gender, ncol = 1) +
scale_y_log10()
arthistory %>%
mutate(year = 10 * (year %/% 10)) %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_nationality)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_nationality, ncol = 1) +
scale_y_log10()
arthistory %>%
mutate(year = 10 * (year %/% 10)) %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_gender, ncol = 1) +
scale_y_log10()
arthistory %>%
mutate(year = 10 * (year %/% 10)) %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_race_nwi)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_race_nwi, ncol = 1) +
scale_y_log10()
arthistory %>%
mutate(year = 10 * (year %/% 10)) %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_race_nwi)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_race_nwi, ncol = 1) +
scale_y_log10()
arthistory %>%
mutate(year = 10 * (year %/% 10)) %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_race_nwi)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_race_nwi, ncol = 1) +
scale_y_log10() +
scale_y_continuous(labels = scales::percent)
arthistory %>%
mutate(year = 10 * (year %/% 10)) %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_race_nwi)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_race_nwi, ncol = 1) +
scale_y_log10()
arthistory %>%
mutate(year = 10 * (year %/% 10)) %>%
ggplot(aes(as.factor(year), space_ratio_per_page_total, fill = artist_gender)) +
geom_boxplot(show.legend = FALSE) +
facet_wrap(~artist_gender, ncol = 1) +
scale_y_log10()
1993 %/% 10
1993 %% 10
1993 %/% 20
1993 %/% 30
1993 %/% 10
(1993 %/% 10) * 10
1993/10
1993 %/% 10
round(1993/10)
round(1993/10)*10
round(1993/10)*10
library(shiny)
library(tidyverse)
dota_comments <- read_csv("GitHub/GoEmotions_Brainstation_Cap/dota_comments.csv")
View(dota_comments)
dota_comments %>% group_by(logpred) %>% summarize(n())
dota_comments %>% group_by(logpred) %>% summarize(n()) %>% ggplot(aes(logpred, n())) + geom_col()
dota_comments %>% group_by(logpred) %>% summarize(n()) %>% ggplot(aes(logpred, `n()`)) + geom_col()
dota_comments %>% group_by(logpred) %>% summarize(n()) %>% ggplot(aes(logpred, `n()`, color = logpred)) + geom_col()
dota_comments %>%
group_by(logpred) %>%
summarize(n()) %>%
ggplot(aes(logpred, `n()`, color = as.factor(logpred))) + geom_col()
dota_comments %>%
group_by(logpred) %>%
summarize(n()) %>%
ggplot(aes(logpred, `n()`, fill= as.factor(logpred))) + geom_col()
colnames(dota_comments)
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
dota_comments %>%
group_by(logpred) %>%
summarize(n())
dota_comments %>%
group_by(logpred) %>%
summarize(n()) %>%
ggplot(aes(logpred, `n()`, fill= as.factor(logpred))) + geom_col()
runApp('GitHub/shiny_apps/Selex_selection_ngs')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
dota_comments %>%
group_by(logpred) %>%
summarize(n())
dota_comments %>%
group_by(logpred) %>%
summarize(sum = n())
test <- dota_comments %>%
group_by(logpred) %>%
summarize(sum = n())
test[1]
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
test[1]
test[2]
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
test <- dota_comments %>%
group_by(logpred) %>%
count()
View(test)
test[2]
test[1]
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
colnames(dota_comments)
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
test$1
test$1
test <- dota_comments %>%
group_by(logpred) %>%
count()
View(test)
test$logpred
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
test$logpred
test <- dota_comments %>%
group_by(logpred) %>%
count() %>%
plot()
test <- dota_comments %>%
group_by(logpred) %>%
count() %>%
ggplot(aes(logpred, n)) + geom_col
test <- dota_comments %>%
group_by(logpred) %>%
count() %>%
ggplot(aes(logpred, n)) + geom_col()
test <- dota_comments %>%
group_by(logpred) %>%
count() %>%
ggplot(aes(logpred, n)) + geom_col()
dota_comments %>%
group_by(logpred) %>%
count() %>%
ggplot(aes(logpred, n)) +
geom_col()
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
dota_comments %>%
group_by(logpred) %>%
count() %>%
ggplot(aes(logpred, n)) +
geom_col()
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
colnames(dota_comments)
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
dota_comments %>%
group_by(logpred) %>%
count() %>%
ggplot(aes(logpred, n)) +
geom_col()
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
test <- dota_comments %>%
group_by(logpred) %>%
count()
test
test %>% ggplot(aes(test[1], test[2])) + geom_col()
test %>% ggplot(aes(test$logpred, test[2])) + geom_col()
test %>% ggplot(aes(test$logpred, test$n)) + geom_col()
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
test[1]
as.list(test[1])
list(test[1])
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
# import libraries
library(shiny)
library(tidyverse)
# read in data
dota_comments <- read_csv("dota_comments.csv")
# read in data
dota_comments <- read_csv("dota_comments.csv")
getwd()
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
# read in data
dota_comments <- read_csv("dota_comments.csv")
dota_comments %>% ggplot(aes(logred)) + geom_bar()
dota_comments %>% ggplot(aes(logpred)) + geom_bar()
runApp()
dota_comments %>% ggplot(aes('logpred')) + geom_bar()
?parse
dota_comments %>% ggplot(aes(parse('logpred'))) + geom_bar()
dota_comments %>% ggplot(aes(parse(text ='logpred'))) + geom_bar()
eval(pase(text = 'logpred'))
eval(parse(text = 'logpred'))
dota_comments %>% ggplot(aes(eval(parse(text = 'logpred'))) + geom_bar()
dota_comments %>% ggplot(aes(eval(parse(text = 'logpred')))) + geom_bar()
runApp()
runApp()
runApp()
runApp()
dota_comments %>% ggplot(aes(eval(parse(text = 'logpred')), color = logpred)) + geom_bar()
dota_comments %>% ggplot(aes(eval(parse(text = 'logpred')), color = logpred)) + geom_bar()
dota_comments %>% ggplot(aes(eval(parse(text = 'logpred')), fill = logpred)) + geom_bar()
dota_comments %>% ggplot(
aes(
x = eval(parse(text = 'logpred')),
fill = eval(parse(text = 'logpred')))) +
geom_bar()
dota_comments %>% ggplot(
aes(
x = eval(parse(text = 'logpred')),
fill = eval(parse(text = 'logpred')))) +
geom_bar()
runApp()
runApp()
runApp()
