labels = c("Positive", "Neutral", "Negative", 'Ambiguous')) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment')
df_simple %>%
group_by(Sentiment) %>%
summarize(Per = (n()/nrow(df_simple))*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per,1), '%'), vjust = -1.5)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative", 'Ambiguous')) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment')
df_simple %>%
group_by(Sentiment) %>%
summarize(Per = (n()/nrow(df_simple))*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per,1), '%'), vjust = -1)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative", 'Ambiguous')) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment')
df_simple %>%
group_by(Sentiment) %>%
summarize(Per = (n()/nrow(df_simple))*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per,1), '%'), vjust = -0.5)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative", 'Ambiguous')) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment')
df_simple %>%
group_by(Sentiment) %>%
summarize(Per = (n()/nrow(df_simple))*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per,1), '%'), vjust = -0.5)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative", 'Ambiguous')) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment')
df_simple %>%
group_by(Sentiment) %>%
summarize(Per = (n()/nrow(df_simple))*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per,1), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative", 'Ambiguous')) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment')
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
group_by(Sentiment) %>%
summarize(Per = (n()/nrow(df_simple))*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per,1), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative", 'Ambiguous')) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment')
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations") +
coord_polar("y", start=0)
shiny::runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
shiny::runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
shiny::runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
runApp('GitHub/GoEmotions_Brainstation_Cap/GoEmo_RShiny')
library(tidyverse)
library(tidyverse)
yes <- 0.69
no <- 0.31
dataframe <- (yes, no)
df <- data.frame(yes, no)
View(df)
View(df)
column1 <- c('Yes', 'No')
column2 <- c(0.69, 0.31)
df <- data.frame(column1, column2)
View(df)
Response <- c('Yes', 'No')
Proportion <- c(0.69, 0.31)
df <- data.frame(Response, Proportion)
View(df)
df %>% ggplot(aes(Response, Propotion*100)) + geom_col()
df %>% ggplot(aes(Response, Proportion*100)) + geom_col()
df %>% ggplot(aes(Response, Proportion*100)) +
geom_col() +
labs(title = 'Should companies off new ways to get existing products/services?')
df %>% ggplot(aes(Response, Proportion*100)) +
geom_col() +
labs(title = 'Should companies off new ways to get existing products/services?') +
theme_minimal()
df %>% ggplot(aes(Response, Proportion*100)) +
geom_col() +
labs(title = 'Should Companies Create New Ways to Get Existing Products/Services?') +
theme_minimal()
df %>% ggplot(aes(Response, Proportion*100)) +
geom_col() +
labs(title = 'Customers Expect Innovation') +
theme_minimal()
df %>% ggplot(aes(Response, Proportion*100)) +
geom_col() +
labs(title = 'Customers Expect Innovation',
y = 'Percent') +
theme_minimal()
df %>% ggplot(aes(Response, Proportion*100)) +
geom_col() +
labs(title = 'Customers Expect Innovation',
y = 'Percent') +
geom_text(aes(label = paste(Proportion*100, '%'), vjust = -0.3)) +
theme_minimal()
df %>% ggplot(aes(Response, Proportion*100)) +
geom_col() +
coord_polar("y", start = 0) +
labs(title = 'Customers Expect Innovation',
y = 'Percent') +
geom_text(aes(label = paste(Proportion*100, '%'), vjust = -0.3)) +
theme_minimal()
df %>% ggplot(aes(Response, Proportion*100, fill = Response)) +
geom_col() +
coord_polar() +
labs(title = 'Customers Expect Innovation',
y = 'Percent') +
geom_text(aes(label = paste(Proportion*100, '%'), vjust = -0.3)) +
theme_minimal()
df %>% ggplot(aes(Response, Proportion*100, fill = Response)) +
geom_col() +
coord_polar("y", start = 0) +
labs(title = 'Customers Expect Innovation',
y = 'Percent') +
geom_text(aes(label = paste(Proportion*100, '%'), vjust = -0.3)) +
theme_minimal()
df %>% ggplot(aes(Response, Proportion*100, fill = Response)) +
geom_col() +
labs(title = 'Customers Expect Innovation',
y = 'Percent') +
geom_text(aes(label = paste(Proportion*100, '%'), vjust = -0.3)) +
theme_minimal()
df %>% ggplot(aes(Response, Proportion*100, fill = Response)) +
geom_col() +
labs(title = 'Customers Expect Innovation',
y = 'Percent') +
geom_text(aes(label = paste(Proportion*100, '%'), vjust = -0.3)) +
theme_minimal() +
scale_fill_manual(values=c("#ffaf4a","#272727"))
df %>% ggplot(aes(Response, Proportion*100, fill = Response)) +
geom_col() +
labs(title = 'Customers Expect Innovation',
y = 'Percent') +
geom_text(aes(label = paste(Proportion*100, '%'), vjust = -0.3)) +
theme_minimal() +
scale_fill_manual(values=c("#272727","#ffaf4a"))
shiny::runApp('GitHub/GoEmotions_Brainstation_Cap/R_Shiny_Dashboard')
df_simple <- read_csv("GoEmotions_Sentiment_simple.csv")
library(tidyverse)
df_simple <- read_csv("GoEmotions_Sentiment_simple.csv")
df_simple <- read_csv("GitHub/GoEmotions_Brainstation_Cap/ggplot_images/GoEmotions_Sentiment_simple.csv")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations") +
scale_fill_manual(values = c("Positive" = "#619CFF",
"Neutral" = "#00BA38",
"Negative" = "#F8766D"))
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_manual(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative"),
values = c("Positive" = "#619CFF",
"Neutral" = "#00BA38",
"Negative" = "#F8766D")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations") +
scale_fill_hue(values = c("Positive" = "#619CFF",
"Neutral" = "#00BA38",
"Negative" = "#F8766D"))
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(arrange(Sentiment)))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(arrange(as.int(Sentiment))))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(arrange(as.numeric(Sentiment))))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.numeric(as.factor(Sentiment)))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_manual(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
df_simple %>%
filter(Sentiment < 3) %>%
group_by(Sentiment) %>%
summarize(Per = (n()/51683)*100) %>%
ggplot(aes(Sentiment, Per, fill = as.factor(Sentiment))) +
geom_col() +
geom_text(aes(label = paste(round(Per), '%'), vjust = -0.3)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() ) +
scale_fill_discrete(name = "Sentiment",
labels = c("Positive", "Neutral", "Negative")) +
labs(x = NULL,
y = NULL,
color=NULL,
title = 'Balance of Sentiment',
subtitle = "Without Ambiguous Observations")
# read in data
dota_comments <- read_csv("dota_comments_BERT.csv")
# set to current directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# read in data
dota_comments <- read_csv("dota_comments_BERT.csv")
dota_comments <- tibble::rowid_to_column(dota_comments, "ID")
dota_comments %>%
ggplot(aes(x = BERT)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(..x..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.position="none") +
labs(x = 'Sentiment',
y = 'Proportion',
title = 'Proportion of Sentiment')
View(dota_comments)
dota_comments %>%
ggplot(aes(x = Logistic_Regression)) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = factor(..x..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.position="none") +
labs(x = 'Sentiment',
y = 'Proportion',
title = 'Proportion of Sentiment')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
